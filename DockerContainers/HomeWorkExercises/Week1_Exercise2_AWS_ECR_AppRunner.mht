From: <Saved by Blink>
Snapshot-Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-ContainersRedux/exercise-2-apprunner.html
Subject: Exercise 2: Using Amazon ECR and AWS App Runner
Date: Sun, 9 Jun 2024 17:29:19 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--LXHJMkCOVdFktKvzK9v9qNJx4mQlsD9jGaVQrGR6rL----"


------MultipartBoundary--LXHJMkCOVdFktKvzK9v9qNJx4mQlsD9jGaVQrGR6rL----
Content-Type: text/html
Content-ID: <frame-F4C3600B0BFBF70FAFF95A282A8C0EAD@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-ContainersRedux/exercise-2-apprunner.html

<!DOCTYPE html><html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"" xml:l=
ang=3D""><head><meta http-equiv=3D"Content-Type" content=3D"text/html; char=
set=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-883=
0ad6a-d399-48a1-a76b-23de521d3228@mhtml.blink" />
 =20
  <meta name=3D"generator" content=3D"pandoc">
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0, user-scalable=3Dyes">
  <title>Exercise 2: Using Amazon ECR and AWS App Runner</title>
 =20
 =20


</head><body>
<p><em>[version_1.0]</em></p>
<div style=3D"background-color: #FFD2D2; padding: 15px; margin-bottom: 25px=
">
<h3>
<span class=3D"fa fa-info-circle"></span> Note
</h3>
<p>The exercises in this course will have an associated charge in your AWS =
account. In this exercise, you create the following resources:</p>
<ul>
<li>AWS Identity and Access Management (IAM) policy and user (Policies and =
users are AWS account features, offered at no additional charge)</li>
<li>AWS App Runner service</li>
<li>Amazon Elastic Container Registry (Amazon ECR) repository</li>
</ul>
<p>Familiarize yourself with <strong><a href=3D"https://aws.amazon.com/appr=
unner/pricing/" target=3D"_blank">AWS App Runner pricing</a></strong>, <str=
ong><a href=3D"https://aws.amazon.com/ecr/pricing/" target=3D"_blank">Amazo=
n ECR pricing</a></strong>, and the <strong><a href=3D"https://aws.amazon.c=
om/free/" target=3D"_blank">AWS Free Tier</a></strong>.</p>
</div>
<h1 id=3D"exercise-2-using-amazon-ecr-and-aws-app-runner">Exercise 2: Using=
 Amazon ECR and AWS App Runner</h1>
<p>In this exercise, you create an Amazon ECR repository, authenticate to A=
mazon ECR, and then push your image to the Amazon ECR repository. You will =
then set up and deploy an AWS App Runner service.</p>
<h2 id=3D"task-1-creating-an-amazon-ecr-repository">Task 1: Creating an Ama=
zon ECR repository</h2>
<p>In this task, you will create an Amazon ECR repository.</p>
<ol type=3D"1">
<li><p>In the AWS Management Console, choose <strong>Services</strong>, and=
 then search for and open <strong>Elastic Container Registry</strong>.</p><=
/li>
<li><p>If you have no existing repositories, choose <strong>Get Started</st=
rong>. Otherwise, choose <strong>Create repository</strong>.</p></li>
<li><p>For <strong>Repository name</strong>, enter <code>first-container</c=
ode> and then choose <strong>Create repository</strong>.</p></li>
<li><p>Choose the <strong>first-container</strong> repository link and then=
 choose <strong>View push commands</strong>.</p>
<p>You should see the commands that you will use from your AWS Cloud9 insta=
nce.</p></li>
</ol>
<h2 id=3D"task-2-authenticate-to-amazon-ecr">Task 2: Authenticate to Amazon=
 ECR</h2>
<p>In this task, you will authenticate to Amazon ECR through the AWS Cloud9=
 IDE instance by running the push commands (which you saw in Amazon ECR).</=
p>
<ol type=3D"1">
<li><p>In the AWS Management Console, choose <strong>Services</strong>, and=
 then search for and open <strong>Cloud9</strong>.</p></li>
<li><p>Choose <strong>Open IDE</strong>.</p></li>
<li><p>In the AWS Cloud9 terminal, find the <code>ACCOUNT_ID</code> and the=
 <code>REGION</code>, and insert these values into the <code>aws ecr</code>=
 command.</p>
<div class=3D"sourceCode" id=3D"cb1"><pre class=3D"sourceCode bash" id=3D"c=
odeblock0"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
1-1" title=3D"1"><span class=3D"bu">export</span> <span class=3D"va">ACCOUN=
T_ID=3D$(</span><span class=3D"ex">aws</span> sts get-caller-identity --out=
put text --query Account<span class=3D"va">)</span></a>
<a class=3D"sourceLine" id=3D"cb1-2" title=3D"2"></a>
<a class=3D"sourceLine" id=3D"cb1-3" title=3D"3"><span class=3D"bu">export<=
/span> <span class=3D"va">REGION=3D</span><span class=3D"st">"</span><span =
class=3D"kw">`</span><span class=3D"fu">wget</span> -q -O - http://169.254.=
169.254/latest/meta-data/placement/region<span class=3D"kw">`</span><span c=
lass=3D"st">"</span></a>
<a class=3D"sourceLine" id=3D"cb1-4" title=3D"4"></a>
<a class=3D"sourceLine" id=3D"cb1-5" title=3D"5"><span class=3D"ex">aws</sp=
an> ecr get-login-password <span class=3D"kw">|</span> <span class=3D"ex">d=
ocker</span> login --username AWS --password-stdin <span class=3D"va">${ACC=
OUNT_ID}</span>.dkr.ecr.<span class=3D"va">${REGION}</span>.amazonaws.com</=
a></code></pre><button class=3D"btn copybtn" data-clipboard-target=3D"#code=
block0"><img class=3D"clipboard" src=3D"https://aws-tc-largeobjects.s3.us-w=
est-2.amazonaws.com/DEV-AWS-MO-ContainersRedux/images/clipboard.svg" width=
=3D"13" alt=3D"Copy to clipboard"></button></div></li>
<li><p>Add a new tag to <code>first-container</code> that references the Am=
azon ECR container registry.</p>
<div class=3D"sourceCode" id=3D"cb2"><pre class=3D"sourceCode bash" id=3D"c=
odeblock1"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
2-1" title=3D"1"><span class=3D"ex">docker</span> tag first-container <span=
 class=3D"va">${ACCOUNT_ID}</span>.dkr.ecr.<span class=3D"va">${REGION}</sp=
an>.amazonaws.com/first-container:latest</a></code></pre><button class=3D"b=
tn copybtn" data-clipboard-target=3D"#codeblock1"><img class=3D"clipboard" =
src=3D"https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-Co=
ntainersRedux/images/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard">=
</button></div></li>
<li><p>Push the image to Amazon ECR.</p>
<div class=3D"sourceCode" id=3D"cb3"><pre class=3D"sourceCode bash" id=3D"c=
odeblock2"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
3-1" title=3D"1"><span class=3D"ex">docker</span> push <span class=3D"va">$=
{ACCOUNT_ID}</span>.dkr.ecr.<span class=3D"va">${REGION}</span>.amazonaws.c=
om/first-container:latest</a></code></pre><button class=3D"btn copybtn" dat=
a-clipboard-target=3D"#codeblock2"><img class=3D"clipboard" src=3D"https://=
aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-ContainersRedux/i=
mages/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard"></button></div>=
</li>
</ol>
<h2 id=3D"task-3-setting-up-aws-app-runner">Task 3: Setting up AWS App Runn=
er</h2>
<p>In this task, you will set up and deploy an AWS App Runner service.</p>
<ol type=3D"1">
<li><p>At the top left, choose the <strong>AWS Cloud9</strong> icon and the=
n choose <strong>Go To Your Dashboard</strong>.</p></li>
<li><p>In the AWS Management Console, choose <strong>Services</strong>, and=
 then search for and open <strong>App Runner</strong>.</p></li>
<li><p>Choose <strong>Create an App Runner service</strong>.</p></li>
<li><p>For <strong>Container image URI</strong>, choose <strong>Browse</str=
ong>.</p></li>
<li><p>Choose <strong>Image repository</strong>, choose <strong>first-conta=
iner</strong>, and then choose <strong>Continue</strong>.</p></li>
<li><p>If you haven=E2=80=99t used Amazon ECR before, for <strong>ECR acces=
s role</strong>, choose <strong>Create new service role</strong>. Otherwise=
, you can keep <strong>Use existing service role</strong> selected.</p></li=
>
<li><p>Choose <strong>Next</strong>.</p></li>
<li><p>For <strong>Service name</strong>, enter <code>first-container</code=
> and choose <strong>Next</strong>.</p></li>
<li><p>Choose <strong>Create &amp; deploy</strong>. <em>Wait for the servic=
e creation to complete.</em></p></li>
<li><p>Choose the <strong>Default domain</strong> link.</p>
<p>You should see the application running.</p></li>
</ol>
<h2 id=3D"challenge">Challenge</h2>
<p>You might recall that the containerized application takes <code>MESSAGE_=
COLOR</code> as an environment variable.</p>
<p>For this challenge, edit your service settings and add an environment va=
riable in the expected color format (for example, <code>#0000ff</code>).</p=
>
<p>Wait for the service update to complete. Confirm the use of the environm=
ent variable by visiting the re-configured application.</p>
<!-- SNEAKY SNEAKY -->
<!--Configuration>(Under Configure Service) choose EDIT-->
<!--Add env variable>KEY=3DMESSAGE_COLOR>Value=3D#c9c9c9-->
<!--Save-->
<h2 id=3D"cleaning-up">Cleaning up</h2>
<p>In this task, you delete some of the resources that you used for this ex=
ercise.</p>
<ol type=3D"1">
<li>Delete the AWS App Runner service.
<ul>
<li>Open the <strong>App Runner</strong> dashboard.</li>
<li>Choose <strong>first-container</strong>.</li>
<li>Choose <strong>Actions</strong> and then choose <strong>Delete</strong>=
.</li>
<li>Confirm the deletion.</li>
</ul></li>
<li>Delete the IAM role.
<ul>
<li>Open the <strong>IAM</strong> dashboard.</li>
<li>Choose <strong>Roles</strong>.</li>
<li>Delete <strong>AppRunnerECRAccessRole</strong> and confirm the deletion=
.</li>
</ul></li>
</ol>


<footer>
    <p>=C2=A9 2022 Amazon Web Services, Inc. or its affiliates. All rights =
reserved. This work may not be reproduced or redistributed, in whole or in =
part, without prior written permission from Amazon Web Services, Inc. Comme=
rcial copying, lending, or selling is prohibited. Corrections, feedback, or=
 other questions? Contact us at <a href=3D"https://support.aws.amazon.com/#=
/contacts/aws-training" target=3D"_blank">https://support.aws.amazon.com/#/=
contacts/aws-training</a>. All trademarks are the property of their owners.=
</p>
</footer>

</body></html>
------MultipartBoundary--LXHJMkCOVdFktKvzK9v9qNJx4mQlsD9jGaVQrGR6rL----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8830ad6a-d399-48a1-a76b-23de521d3228@mhtml.blink

@charset "utf-8";

html, body, footer { font-family: "Open Sans", "Helvetica Neue", Helvetica,=
 Arial, sans-serif; margin: 1em; }

img:not(.clipboard) { max-width: 100%; height: auto; width: auto; }

button.copybtn { transition: opacity 0.3s ease-in-out 0s; opacity: 0; paddi=
ng: 2px 6px; position: absolute; right: 4px; top: 4px; }

div.sourceCode:hover .copybtn, div.sourceCode .copybtn:focus { opacity: 0.3=
; }

div.sourceCode .copybtn:hover { opacity: 1; }

div.sourceCode { position: relative; }

.xmodule_display.xmodule_HtmlBlock ol { padding: 0px 0px 0px 2em !important=
; }

.xmodule_display.xmodule_HtmlBlock ul { padding: 0px 0px 0px 2em !important=
; }

code { border-radius: 4px; padding: 2px 4px !important; background-color: r=
gb(238, 238, 238) !important; }

pre code { display: block; overflow-x: auto; margin: 0px 0px 10px; font-siz=
e: 13px; line-height: 1.42857; word-break: break-all; overflow-wrap: break-=
word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; white-space=
: pre; padding: 9.5px !important; background-color: rgb(245, 245, 245) !imp=
ortant; }

pre code span.al { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.an { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.at { color: rgb(125, 144, 41); }

pre code span.bn { color: rgb(64, 160, 112); }

pre code span.bu { color: rgb(6, 40, 126); }

pre code span.cf { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.ch { color: rgb(64, 112, 160); }

pre code span.cn { color: rgb(136, 0, 0); }

pre code span.co { color: rgb(96, 160, 176); font-style: italic; }

pre code span.cv { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.do { color: rgb(186, 33, 33); font-style: italic; }

pre code span.dt { color: rgb(144, 32, 0); }

pre code span.dv { color: rgb(64, 160, 112); }

pre code span.er { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.ex { color: rgb(6, 40, 126); }

pre code span.fl { color: rgb(64, 160, 112); }

pre code span.fu { color: rgb(6, 40, 126); }

pre code span.im { }

pre code span.in { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.kw { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.op { color: rgb(102, 102, 102); }

pre code span.ot { color: rgb(0, 112, 32); }

pre code span.pp { color: rgb(188, 122, 0); }

pre code span.sc { color: rgb(64, 112, 160); }

pre code span.ss { color: rgb(187, 102, 136); }

pre code span.st { color: rgb(64, 112, 160); }

pre code span.va { color: rgb(25, 23, 124); }

pre code span.vs { color: rgb(64, 112, 160); }

pre code span.wa { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

footer { padding-top: 3em; font-style: italic; font-size: 0.9em; }
------MultipartBoundary--LXHJMkCOVdFktKvzK9v9qNJx4mQlsD9jGaVQrGR6rL----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/DEV-AWS-MO-ContainersRedux/images/clipboard.svg

<svg height=3D"1024" width=3D"896" xmlns=3D"http://www.w3.org/2000/svg">
  <path d=3D"M128 768h256v64H128v-64z m320-384H128v64h320v-64z m128 192V448=
L384 640l192 192V704h320V576H576z m-288-64H128v64h160v-64zM128 704h160v-64H=
128v64z m576 64h64v128c-1 18-7 33-19 45s-27 18-45 19H64c-35 0-64-29-64-64V1=
92c0-35 29-64 64-64h192C256 57 313 0 384 0s128 57 128 128h192c35 0 64 29 64=
 64v320h-64V320H64v576h640V768zM128 256h512c0-35-29-64-64-64h-64c-35 0-64-2=
9-64-64s-29-64-64-64-64 29-64 64-29 64-64 64h-64c-35 0-64 29-64 64z" />
</svg>=0A
------MultipartBoundary--LXHJMkCOVdFktKvzK9v9qNJx4mQlsD9jGaVQrGR6rL------
